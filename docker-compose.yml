version: '2'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    expose:
      - "9300"
      - "9200"
    ports:
      - "127.0.0.1:9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
# needed to persist all elasticsearch data :
     - "elastic_data:/usr/share/elasticsearch/data:rw"    
    networks:
      - elk

  elasticsearch2:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    expose:
      - "9200"
      - "9300"
    ports:
      - "127.0.0.1:9301:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
# needed to persist all elasticsearch data :
     - "elastic_data2:/usr/share/elasticsearch/data:rw"
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "5000:5000"
      - "5044:5044"
      - "127.0.0.1:9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
  
#   filebeat:
#     build:
#       context: filebeat/
#       args:
#         ELK_VERSION: $ELK_VERSION
#     depends_on:
#       - logststash
#     volumes:
# # needed to persist filebeat tracking data :
#      - "filebeat_data:/usr/share/filebeat/data:rw"
# # needed to access all docker logs (read only) :
#      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
# # needed to access additional informations about containers
#      - "/var/run/docker.sock:/var/run/docker.sock"


volumes:
# create a persistent volume for Filebeat
  # filebeat_data:
  elastic_data:
  elastic_data2:

networks:
  elk:
    driver: bridge
